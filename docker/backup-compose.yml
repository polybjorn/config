# ${XDG_CONFIG_HOME}/docker/backup-compose.yml

version: "3.9"
x-variables:
  production-standard: &default
    restart: ${RESTART}
    networks:
      production-network:
  env-standard: &env
    PUID: ${PUID}
    PGID: ${PGID}
    TZ: ${TZ}

env_file: .env

services:
  adminer:
    container_name: adminer
    image: adminer
    << : *default
    environment: *env
    ports:
      - 8980:8080

  freshrss:
    container_name: freshrss
    image: ghcr.io/linuxserver/freshrss
    << : *default
    environment: *env
    ports:
      - 8054:80
    volumes:
      - ${CONFIG}/freshrss:/config

  grafana:
    container_name: grafana
    image: grafana/grafana
    << : *default
    environment: *env
    user: 1000
    ports:
      - 3000:3000
    volumes:
      - ${CONFIG}/grafana/data:/var/lib/grafana
      - ${CONFIG}/grafana/config:/etc/grafana


  hugo:
    container_name: hugo
    image: klakegg/hugo
    << : *default
    environment: *env
    command: server -t gruvhugo -D
    ports:
      - 1313:1313
    volumes:
      - ${CONFIG}/hugo/${DOMAIN}:/src

  influxdb:
    container_name: influxdb
    image: influxdb
    << : *default
    environment:
      << : *env
      PRE_CREATE_DB: cadvisor
    ports:
      - 8086:8086
    volumes:
      - ${CONFIG}/influxdb:/var/lib/influxdb2
      - ${CONFIG}/influxdb:/etc/influxdb2

  minecraft:
    container_name: minecraft
    image: itzg/minecraft-server:java16
    << : *default
    environment:
      << : *env
      EULA: true
#     TYPE: CURSEFORGE
#     CF_SERVER_MOD: /modpacks/file_name.zip
      MAX_PLAYERS: 10
      OPS: ${MINECRAFT_USERS}
      MODE: survival
      DIFFICULTY: easy
      VERSION: 1.17.1
      INIT_MEMORY: 1G
      MAX_MEMORY: 10G
      ENABLE_AUTOPAUSE: true
      OVERRIDE_SERVER_PROPERTIES: true
      ENABLE_ROLLING_LOGS: true
      MAX_TICK_TIME: "-1"
    ports:
      - 25565:25565
    volumes:
      - ${CONFIG}/minecraft:/data
      - ${CONFIG}/minecraft/modpacks:/modpacks

  node_exporter:
    container_name: node_exporter
    image: bitnami/node-exporter
    << : *default
    environment: *env
    ports:
      - 9100:9100
    volumes:
      - '/:/host:ro,rslave'

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    << : *default
    environment: *env
    ports:
      - 9443:9443
      - 8000:8000
    volumes:
      - ${CONFIG}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  prometheus:
    container_name: prometheus
    image: bitnami/prometheus
    << : *default
    environment: *env
    ports:
      - 9090:9090
    volumes:
      - ${CONFIG}/prometheus:/etc/prometheus

  redis:
    container_name: redis
    image: redis
    << : *default
    environment: *env
    ports:
      - 6379:6379
    volumes:
      - ${CONFIG}/redis:/data

  telegraf:
    container_name: telegraf
    image: telegraf
    << : *default
    environment: *env
    volumes:
      - ${CONFIG}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock